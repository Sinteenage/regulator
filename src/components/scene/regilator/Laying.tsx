/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Tube04: THREE.Mesh;
  };
  materials: {
    ['Metal_Grey_Plain.001']: THREE.MeshStandardMaterial;
  };
};

export function Laying(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF('/assets/models/laying.gltf') as GLTFResult;

    materials['Metal_Grey_Plain.001'].roughness = 0.2;
    materials['Metal_Grey_Plain.001'].metalness = 1;

    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Tube04.geometry}
                material={materials['Metal_Grey_Plain.001']}
                rotation={[-1.57, -Math.PI / 4, 0]}
                scale={0.025}
            />
        </group>
    );
}

useGLTF.preload('/assets/models/laying.gltf');